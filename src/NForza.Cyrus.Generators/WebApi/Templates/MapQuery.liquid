    app.MapGet("{{ Path }}", {% if ReturnsTask %}async {% endif %}( {{ RouteParameters }} [FromServices] IHttpContextObjectFactory objectFactory, [FromServices] IHttpContextAccessor ctx) =>
    {
        using var scope = app.Services.CreateScope();
        var services = scope.ServiceProvider;
        {{ Query }} query = objectFactory.CreateFromHttpContextWithRouteParameters<{{ Query | as-contract }}, {{ Query }}>(ctx.HttpContext);
        if (!ObjectValidation.Validate<{{ Query }}>(query, services, out var problem))
            return Results.BadRequest(problem);
        var queryResult = {% if ReturnsTask %}await {% endif %}{{ QueryInvocation }};
        return QueryResultAdapter.FromObject(queryResult);
    })
    {%- if Attributes.size > 0 -%}
    .WithMetadata([
    {%- for attr in Attributes %}
        {{ attr }}{% unless forloop.last %},{% endunless %}
    {% endfor %}])
    {% endif -%}
    .Produces<{{ ReturnType }}>()
    .WithSwaggerParameters("{{Path}}");
