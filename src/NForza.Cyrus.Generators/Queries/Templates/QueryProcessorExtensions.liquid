using System;
using System.Threading;
using System.Threading.Tasks;
using Microsoft.Extensions.DependencyInjection;

namespace NForza.Cyrus.Cqrs;

public static class QueryProcessorExtensions
{
{% for q in Queries %}
    public static {% if q.ReturnsTask %}async {% endif %} Task<{{ q.ReturnType }}> Query(this IQueryProcessor queryProcessor, {{ q.QueryType }} query, CancellationToken cancellationToken = default) 
        => {% if q.ReturnsTask %}await {{ q.Invocation }}{% else %}Task.FromResult<{{ q.ReturnType }}>({{ q.Invocation }}){% endif %};
{% endfor %}
}