using System;
using System.ComponentModel;
using System.Diagnostics;
using System.Runtime.InteropServices.ComTypes;
using System.Text.Json.Serialization;
using NForza.Cyrus.Abstractions;

namespace {{ Namespace }};

[JsonConverter(typeof({{ Name }}JsonConverter))]
[TypeConverter(typeof({{ Name }}TypeConverter))]
[DebuggerDisplay("{Value}")]
public partial record struct {{ Name }}(int Value): ITypedId
{
    public static implicit operator {{ UnderlyingType }}({{ Name }} typedId) => typedId.Value;
    public static explicit operator {{ Name }}({{ UnderlyingType }} value) => new(value);
    public bool IsValid => 
        {% if HasMaximumOrMinumum == false %}
            true
        {% else %}
            {% if HasMinimum %}
                Value >= {{ Minimum }}
            {% endif %}
            {% if HasMaximumAndMinumum %}
                && 
            {% endif %}
            {% if HasMaximum %}
            Value < {{ Maximum }}
            {% endif %}
        {% endif %};
    public override string ToString() => Value.ToString();
}