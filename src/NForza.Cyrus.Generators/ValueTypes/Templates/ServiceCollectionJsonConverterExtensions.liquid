using Microsoft.Extensions.DependencyInjection;
using NForza.Cyrus.Cqrs;
using NForza.Cyrus.Abstractions;
using System.Text.Json.Serialization;
{% for i in Imports %} 
using {{ i }};
{% endfor %}

namespace NForza.Cyrus.WebApi;

public class ServiceCollectionJsonConverterExtensions: ICyrusInitializer
{
    public void RegisterServices(IServiceCollection services)
    {
        services.AddSingleton(sp => new ValueTypeDictionary(allTypes));
        {% for t in Types %}        
          services.AddTransient<JsonConverter, {{ t.Name }}JsonConverter>();
        {% endfor %}
    }

    private static Dictionary<Type, Type> allTypes = new() {
    {%- for t in Types %}        
        [typeof({{ t.Name }})] = typeof({{ t.UnderlyingType }}){% unless forloop.last %}, {% endunless -%}
    {% endfor -%}
    };
}