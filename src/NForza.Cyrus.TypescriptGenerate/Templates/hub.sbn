import { Injectable } from '@angular/core';
import * as signalR from '@microsoft/signalr';
{{ for i in imports }}
import { {{ i }} } from './{{ i }}';{{ end }}

@Injectable({
  providedIn: 'root',
})
export class {{ name }}Service {
  private hubConnection: signalR.HubConnection;

  constructor() {
    this.hubConnection = new signalR.HubConnectionBuilder()
      .withUrl('https://localhost:7166{{ path }}') 
      .configureLogging(signalR.LogLevel.Information)
      .build();

    {{ for e in events }}
    this.hubConnection.on('{{e | camel_case }}', (data: {{e}}) => {
      console.log('Received {{e}}:', data);
    });{{ end }}

    this.hubConnection.onclose((error) => {
      console.error('SignalR connection closed:', error);
    });
  }

  public startConnection(): void {
    this.hubConnection
      .start()
      .then(() => {
        console.log('SignalR Connected');
      })
      .catch((err) => {
        console.error('SignalR Connection Error:', err);
      });
  }

  {{ for c in commands }}  
  public {{c | camel_case }}(command: {{c}} ): void {
    console.log('Sending {{c}}');
    this.hubConnection.invoke('{{c}}}', command).catch((err) => {
      console.error('Error sending {{c}}:', err);
    });
  } {{ end }}
}