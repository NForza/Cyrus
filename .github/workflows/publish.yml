name: Publish NuGet Package

on:
  workflow_dispatch:
  push:
    branches:
      - main  # Trigger on pushes to the main branch

jobs:
  publish:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v3

    - name: Setup .NET
      uses: actions/setup-dotnet@v3
      with:
        dotnet-version: '7.0'  # Use your desired .NET version

    - name: Extract and Update PackageVersion
      id: update_version
      run: |
        # Extract the PackageVersion from the .csproj file
        version=$(xmllint --xpath "string(//Project/PropertyGroup/PackageVersion)" MyProject.csproj)

        if [[ -z "$version" ]]; then
          echo "Error: PackageVersion not found in MyProject.csproj"
          exit 1
        fi

        # Replace the revision with the GitHub run ID
        major_minor_patch=$(echo "$version" | cut -d'.' -f1,2)
        new_version="${major_minor_patch}.${{ github.run_id }}"
        echo "Updated PackageVersion: $new_version"

        # Update the .csproj file with the new version
        xmllint --shell MyProject.csproj <<EOF
        cd //Project/PropertyGroup/PackageVersion
        set $new_version
        save
        EOF

        echo "new_version=$new_version" >> $GITHUB_ENV

    - name: Restore dependencies
      run: dotnet restore

    - name: Build the project
      run: dotnet build --configuration Release

    - name: Pack the NuGet package
      run: dotnet pack --configuration Release --output ./output /p:PackageVersion=${{ env.next_version }}

    - name: Push to NuGet
      env:
        NUGET_API_KEY: ${{ secrets.NUGET_API_KEY }}
      run: dotnet nuget push ./output/*.nupkg --api-key $NUGET_API_KEY --source https://api.nuget.org/v3/index.json
